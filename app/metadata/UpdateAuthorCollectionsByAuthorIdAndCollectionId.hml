---
kind: ObjectType
version: v1
definition:
  name: UpdateColumnAuthorCollectionsAuthorId
  description: Update the 'author_id' column in the 'author_collections' collection
  fields:
    - name: set
      type: Int4!
      description: Set the column to this value
  graphql:
    typeName: UpdateColumnAuthorCollectionsAuthorId
    inputTypeName: UpdateColumnAuthorCollectionsAuthorIdInput
  dataConnectorTypeMapping:
    - dataConnectorName: my_pg
      dataConnectorObjectType: update_column_author_collections_author_id
      fieldMapping:
        set:
          column:
            name: _set

---
kind: TypePermissions
version: v1
definition:
  typeName: UpdateColumnAuthorCollectionsAuthorId
  permissions:
    - role: admin
      output:
        allowedFields:
          - set

---
kind: ObjectType
version: v1
definition:
  name: UpdateColumnAuthorCollectionsCollectionId
  description: Update the 'collection_id' column in the 'author_collections' collection
  fields:
    - name: set
      type: Int4!
      description: Set the column to this value
  graphql:
    typeName: UpdateColumnAuthorCollectionsCollectionId
    inputTypeName: UpdateColumnAuthorCollectionsCollectionIdInput
  dataConnectorTypeMapping:
    - dataConnectorName: my_pg
      dataConnectorObjectType: update_column_author_collections_collection_id
      fieldMapping:
        set:
          column:
            name: _set

---
kind: TypePermissions
version: v1
definition:
  typeName: UpdateColumnAuthorCollectionsCollectionId
  permissions:
    - role: admin
      output:
        allowedFields:
          - set

---
kind: ObjectType
version: v1
definition:
  name: UpdateAuthorCollectionsByAuthorIdAndCollectionIdUpdateColumns
  description: Update the columns of the 'author_collections' collection
  fields:
    - name: authorId
      type: UpdateColumnAuthorCollectionsAuthorId
      description: Update the 'author_id' column in the 'author_collections' collection.
    - name: collectionId
      type: UpdateColumnAuthorCollectionsCollectionId
      description: Update the 'collection_id' column in the 'author_collections' collection.
  graphql:
    typeName: UpdateAuthorCollectionsByAuthorIdAndCollectionIdUpdateColumns
    inputTypeName: UpdateAuthorCollectionsByAuthorIdAndCollectionIdUpdateColumnsInput
  dataConnectorTypeMapping:
    - dataConnectorName: my_pg
      dataConnectorObjectType: update_author_collections_by_author_id_and_collection_id_update_columns
      fieldMapping:
        authorId:
          column:
            name: author_id
        collectionId:
          column:
            name: collection_id

---
kind: TypePermissions
version: v1
definition:
  typeName: UpdateAuthorCollectionsByAuthorIdAndCollectionIdUpdateColumns
  permissions:
    - role: admin
      output:
        allowedFields:
          - authorId
          - collectionId

---
kind: ObjectType
version: v1
definition:
  name: UpdateAuthorCollectionsByAuthorIdAndCollectionIdResponse
  description: Responses from the
    'update_author_collections_by_author_id_and_collection_id' procedure
  fields:
    - name: affectedRows
      type: Int4!
      description: The number of rows affected by the mutation
    - name: returning
      type: "[AuthorCollections!]!"
      description: Data from rows affected by the mutation
  graphql:
    typeName: UpdateAuthorCollectionsByAuthorIdAndCollectionIdResponse
    inputTypeName: UpdateAuthorCollectionsByAuthorIdAndCollectionIdResponseInput
  dataConnectorTypeMapping:
    - dataConnectorName: my_pg
      dataConnectorObjectType: update_author_collections_by_author_id_and_collection_id_response
      fieldMapping:
        affectedRows:
          column:
            name: affected_rows
        returning:
          column:
            name: returning

---
kind: TypePermissions
version: v1
definition:
  typeName: UpdateAuthorCollectionsByAuthorIdAndCollectionIdResponse
  permissions:
    - role: admin
      output:
        allowedFields:
          - affectedRows
          - returning

---
kind: Command
version: v1
definition:
  name: UpdateAuthorCollectionsByAuthorIdAndCollectionId
  outputType: UpdateAuthorCollectionsByAuthorIdAndCollectionIdResponse!
  arguments:
    - name: keyAuthorId
      type: Int4!
    - name: keyCollectionId
      type: Int4!
    - name: postCheck
      type: AuthorCollectionsBoolExp
      description: Update permission post-condition predicate over the
        'author_collections' collection
    - name: preCheck
      type: AuthorCollectionsBoolExp
      description: Update permission pre-condition predicate over the
        'author_collections' collection
    - name: updateColumns
      type: UpdateAuthorCollectionsByAuthorIdAndCollectionIdUpdateColumns!
  source:
    dataConnectorName: my_pg
    dataConnectorCommand:
      procedure: update_author_collections_by_author_id_and_collection_id
    argumentMapping:
      keyAuthorId: key_author_id
      keyCollectionId: key_collection_id
      postCheck: post_check
      preCheck: pre_check
      updateColumns: update_columns
  graphql:
    rootFieldName: updateAuthorCollectionsByAuthorIdAndCollectionId
    rootFieldKind: Mutation
  description: Update any row on the 'author_collections' collection using the
    'author_id' and 'collection_id' keys

---
kind: CommandPermissions
version: v1
definition:
  commandName: UpdateAuthorCollectionsByAuthorIdAndCollectionId
  permissions:
    - role: admin
      allowExecution: true

